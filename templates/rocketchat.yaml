apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
  name: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
    spec:
      initContainers:
      - image: mongoclient/mongoclient
        name: rocketchat-init
        command: 
          - bash
          - "-c"
          - |
            while ! mongo --quiet --eval "{ ping: 1 }" mongodb://{{ printf "%s-%s" $.Release.Name "mongo" }}:27017; do sleep 5; done; while [ $(mongo --quiet --eval "rs.status().ok" mongodb://{{ printf "%s-%s" $.Release.Name "mongo" }}:27017) != 1 ]; do mongo --eval "rs.initiate({ _id: 'rs0', members: [ { _id: 0, host: 'localhost:27017' } ]})" mongodb://{{ printf "%s-%s" $.Release.Name "mongo" }}:27017 && sleep 5; done;
        resources:
            requests:
              cpu: 250m
              memory: 256Mi
      containers:
      - name: rocketchat
        image: rocketchat/rocket.chat:3.3.3
        resources:
          requests:
            cpu: 256m
            memory: 256Mi
        ports:
        - containerPort: 3000
          name: rocketchat
        env:
        - name: MONGO_URL
          value: mongodb://{{ printf "%s-%s" $.Release.Name "mongo" }}:27017/rocketchat
        - name: ROOT_URL
          value: {{ printf "%s%s" "https://" ( required "appHost is required" $.Values.appHost ) }}
        - name: Accounts_UseDNSDomainCheck
          value: "True"
        - name: MONGO_OPLOG_URL
          value: mongodb://{{ printf "%s-%s" $.Release.Name "mongo" }}:27017/local?replSet=rs0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
  name: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: {{ printf "%s-%s" $.Release.Name "rocketchat" }}
  type: ClusterIP
